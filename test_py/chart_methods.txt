"""
# --Technical Indicators Charts--

# --Bollinger Bands--

# -- 1st Method --
# figure = plt.Figure(figsize=(8,8), dpi=200)
# ax = figure.add_subplot(111)
# chart_type = FigureCanvasTkAgg(figure, self.root)
# chart_type.get_tk_widget().pack()
# df = bbdf[['Upper_band','Lower_band']].groupby(bbdf['DateTime']).sum()
# df.plot(kind='line', legend=True, ax=ax, fontsize=10)
# ax.set_title('Bollinger_Bands')

# -- 2nd Method --
# plt.figure(figsize=(2,3), dpi=200)
# plt.plot(bbdf['timeframe'], bbdf['Upper_band'], label="Upperband")
# plt.plot(bbdf['timeframe'], bbdf['Lower_band'], label="Lowerband")
# plt.title("Bollinger Bands", fontdict={'fontsize': 20})
# plt.xlabel("Timeframe")
# plt.ylabel("Data")
# plt.legend()
# plt.grid()
# plt.show()
# -- 3rd Method --
# bbdf[['Upper_band', 'Lower_band']].plot(figsize=(10,5))
# plt.grid()
# plt.show()


# --PSAR--
# psar[['Close', 'SAR']].plot(figsize=(10,5))
# plt.grid()
# plt.show()


# --RSI--
# try:
#   figure = plt.Figure(figsize=(8,9), dpi=100)
#   ax = figure.add_subplot(111)
#   chart_type = FigureCanvasTkAgg(figure, self.root)
#   chart_type.get_tk_widget().pack(side=tk.LEFT, fill=tk.BOTH)
#   df = rsi_df[['RSI']].groupby(rsi_df['DateTime']).sum()
#   df.plot(kind='line', legend=True, ax=ax, fontsize=10)
#   ax.set_title('RSI')
# except Exception as e:
#   print("Error RSI Graph: ", e)


# --MACD--
# try:
#   figure = plt.Figure(figsize=(8,9), dpi=100)
#   ax = figure.add_subplot(111)
#   chart_type = FigureCanvasTkAgg(figure, self.root)
#   chart_type.get_tk_widget().pack(side=tk.LEFT, fill=tk.BOTH)
#   df = macd_df[['MACD_Line','MACD_Signal']].groupby(macd_df['DateTime']).sum()
#   df.plot(kind='line', legend=True, ax=ax, fontsize=10)
#   ax.set_title('MACD')
# except Exception as e:
#   print("Error MACD Graph: ", e)

"""

# --KC--
# plt.plot(kc_df['Close'], linewidth = 2, label = 'Close')
# plt.plot(kc_df['kc_upper'], linewidth = 2, color = 'red', linestyle = '--', label = 'KC UPPER 20')
# plt.plot(kc_df['kc_middle'], linewidth = 1.5, color = 'grey', label = 'KC MIDDLE 20')
# plt.plot(kc_df['kc_lower'], linewidth = 2, color = 'blue', linestyle = '--', label = 'KC LOWER 20')
# plt.legend(loc = 'lower right')
# plt.title('KELTNER CHANNEL 20')
# plt.show()

# try:
  #   figure = plt.Figure(figsize=(110,127), dpi=180)
  #   ax = figure.add_subplot(111)
  #   chart_type = FigureCanvasTkAgg(figure, self.root)
  #   chart_type.get_tk_widget().pack(side=tk.LEFT, fill=tk.BOTH)
  #   uf = kc_df[['kc_upper']].groupby(kc_df['DateTime']).sum()
  #   lf = kc_df[['kc_lower']].groupby(kc_df['DateTime']).sum()
  #   mf = kc_df[['kc_middle']].groupby(kc_df['DateTime']).sum()
  #   cl = kc_df[['Close']].groupby(kc_df['DateTime']).sum()
  #   uf.plot(kind='line', linestyle = '--', linewidth=0.5, color = 'red', ax=ax, fontsize=7)
  #   lf.plot(kind='line', linestyle = '--', linewidth=0.5, color = 'blue', ax=ax, fontsize=7)
  #   mf.plot(kind='line', linestyle = '-', linewidth=0.5, ax=ax, color='green', fontsize=7)
  #   cl.plot(kind='line', linestyle = '-', linewidth=0.5, ax=ax, color='black', fontsize=7)
  #   ax.legend(loc = 'lower right')
  #   ax.set_title('Keltner Channel')
# except Exception as e:
  #   print("Error KC Graph: ", e)

# Keltner Channel Graph Plot
try:
    # figure = plt.Figure(figsize=(46, 67), dpi=200)
    # ax = figure.add_subplot(111)
    # chart_type = FigureCanvasTkAgg(figure, self.root)
    # chart_type.get_tk_widget().pack(side=tk.LEFT, fill=tk.BOTH)

    # cl = kc_df[['Close']].groupby(kc_df['DateTime']).sum()
    # uf = kc_df[['kc_upper']].groupby(kc_df['DateTime']).sum()
    # lf = kc_df[['kc_lower']].groupby(kc_df['DateTime']).sum()
    # mf = kc_df[['kc_middle']].groupby(kc_df['DateTime']).sum()

    # cl.plot(kind='line', linestyle='-', linewidth=0.5,
    #         ax=ax, color='#322e2f', fontsize=5)
    # uf.plot(kind='line', linestyle='-.', linewidth=0.5,
    #         ax=ax, color='#990000', fontsize=5)
    # lf.plot(kind='line', linestyle='-.', linewidth=0.5,
    #         ax=ax, color='#0b5394', fontsize=5)
    # mf.plot(kind='line', linestyle='--', linewidth=0.5,
    #         ax=ax, color='#274e13', fontsize=5)

    # ax.xticks(kc_df['DateTime'], rotation=90)
    # ax.legend(loc='lower right', fontsize=5)
    # ax.set_title('--Keltner Channel--')
# ---------------------------------------------
    cl = kc_df[['Close', 'kc_upper', 'kc_lower','kc_middle']].groupby(kc_df['DateTime']).sum()
    cl.plot( y=['Close', 'kc_upper', 'kc_lower','kc_middle'], kind='line')
    plt.show()

except Exception as e:
    print("Error KC Graph: ", e)
